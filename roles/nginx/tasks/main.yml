- name: Install nginx
  apt:
    name:
      - nginx
      - python3-cryptography
- name: Ensure TLS directories exist
  file:
    path: "/etc/ssl/{{ item }}"
    state: directory
  with_items:
    - private
    - certs
    - csr
- name: Generate TLS keypair
  openssl_privatekey:
    path: /etc/ssl/private/mirrors.key
    type: ECC
    curve: secp256r1
  when: devserver|default(False)
- name: Generate certificate request (mirrors hostnames)
  openssl_csr:
    path: /etc/ssl/csr/mirrors.csr
    privatekey_path: /etc/ssl/private/mirrors.key
    common_name: mirrors.mit.edu
    subject_alt_name: "{{ item.value | map('regex_replace', '^', 'DNS:') | list }}"
  with_dict:
    dns_server:
    - mirrors.mit.edu
    - ubuntu.mit.edu
- name: Generate certificate request (hosts hostnames)
  openssl_csr:
    path: /etc/ssl/csr/hosts.csr
    privatekey_path: /etc/ssl/private/mirrors.key
    common_name: solar-one.mit.edu
    subject_alt_name: "{{ item.value | map('regex_replace', '^', 'DNS:') | list }}"
  with_dict:
    dns_server:
    - solar-one.mit.edu
    - solar-two.mit.edu
    - solar-three.mit.edu
- name: Generate self-signed certificate (mirrors hostnames)
  openssl_certificate:
    path: /etc/ssl/certs/mirrors.cer
    privatekey_path: /etc/ssl/private/mirrors.key
    csr_path: /etc/ssl/csr/mirrors.csr
    provider: selfsigned
  notify: restart nginx
  when: devserver|default(False)
- name: Generate self-signed certificate (hosts hostnames)
  openssl_certificate:
    path: /etc/ssl/certs/hosts.cer
    privatekey_path: /etc/ssl/private/mirrors.key
    csr_path: /etc/ssl/csr/hosts.csr
    provider: selfsigned
  notify: restart nginx
  when: devserver|default(False)
- name: Disable old ciphers
  lineinfile:
    path: /etc/nginx/nginx.conf
    regexp: '^\s*ssl_protocols '
    line: '	ssl_protocols TLSv1.2 TLSv1.3;'
  notify: restart nginx
- name: Install TLS parameters
  copy:
    dest: /etc/nginx/conf.d/00-tls-done-right.conf
    src: 00-tls-done-right.conf
  notify: restart nginx
- name: Install nginx snippets
  copy:
    src: "{{ item }}"
    dest: /etc/nginx/snippets
  with_items:
    - security_headers.conf
    - mirrors_common.conf
    - jenkins_common.conf
  notify: restart nginx
- name: Install sites
  copy:
    src: "{{ item }}"
    dest: /etc/nginx/sites-available
  with_items:
    - jenkins_site
    - mirrors_site
    - macports_site
  notify: restart nginx
- name: Activate sites
  file:
    src: "/etc/nginx/sites-available/{{ item }}"
    dest: "/etc/nginx/sites-enabled/{{ item }}"
    state: link
    force: yes
  with_items:
    - jenkins_site
    - mirrors_site
    - macports_site
  notify: restart nginx
- name: Delete default site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: restart nginx
